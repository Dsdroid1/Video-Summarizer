1
00:00:00,180 --> 00:00:19,990


2
00:00:19,990 --> 00:00:20,000


3
00:00:20,000 --> 00:00:21,349


4
00:00:21,349 --> 00:00:21,359
hello everyone

5
00:00:21,359 --> 00:00:23,349
hello everyone
welcome to the video lecture series of

6
00:00:23,349 --> 00:00:23,359
welcome to the video lecture series of

7
00:00:23,359 --> 00:00:24,870
welcome to the video lecture series of
data structure

8
00:00:24,870 --> 00:00:24,880
data structure

9
00:00:24,880 --> 00:00:27,269
data structure
our today's topic is introduction to

10
00:00:27,269 --> 00:00:27,279
our today's topic is introduction to

11
00:00:27,279 --> 00:00:27,990
our today's topic is introduction to
array

12
00:00:27,990 --> 00:00:28,000
array

13
00:00:28,000 --> 00:00:31,109
array
and wendy error representation of

14
00:00:31,109 --> 00:00:31,119
and wendy error representation of

15
00:00:31,119 --> 00:00:33,910
and wendy error representation of
memory and 2d array representation and

16
00:00:33,910 --> 00:00:33,920
memory and 2d array representation and

17
00:00:33,920 --> 00:00:35,190
memory and 2d array representation and
we will also see

18
00:00:35,190 --> 00:00:35,200
we will also see

19
00:00:35,200 --> 00:00:37,350
we will also see
about the how to calculate the memory

20
00:00:37,350 --> 00:00:37,360
about the how to calculate the memory

21
00:00:37,360 --> 00:00:38,310
about the how to calculate the memory
address for

22
00:00:38,310 --> 00:00:38,320
address for

23
00:00:38,320 --> 00:00:41,830
address for
one directive myself janisha

24
00:00:41,830 --> 00:00:41,840
one directive myself janisha

25
00:00:41,840 --> 00:00:45,190
one directive myself janisha
your instructor so let's start

26
00:00:45,190 --> 00:00:45,200
your instructor so let's start

27
00:00:45,200 --> 00:00:48,389
your instructor so let's start
with the outlines see however

28
00:00:48,389 --> 00:00:48,399
with the outlines see however

29
00:00:48,399 --> 00:00:51,430
with the outlines see however
today's outlines are the first

30
00:00:51,430 --> 00:00:51,440
today's outlines are the first

31
00:00:51,440 --> 00:00:54,790
today's outlines are the first
we'll gonna see about the array

32
00:00:54,790 --> 00:00:54,800
we'll gonna see about the array

33
00:00:54,800 --> 00:00:58,709
we'll gonna see about the array
then memory representation in array then

34
00:00:58,709 --> 00:00:58,719
then memory representation in array then

35
00:00:58,719 --> 00:01:02,389
then memory representation in array then
one day example memory representation of

36
00:01:02,389 --> 00:01:02,399
one day example memory representation of

37
00:01:02,399 --> 00:01:06,070
one day example memory representation of
2d8 so students now it's time

38
00:01:06,070 --> 00:01:06,080
2d8 so students now it's time

39
00:01:06,080 --> 00:01:08,630
2d8 so students now it's time
to tell me that what do you mean by the

40
00:01:08,630 --> 00:01:08,640
to tell me that what do you mean by the

41
00:01:08,640 --> 00:01:09,590
to tell me that what do you mean by the
array

42
00:01:09,590 --> 00:01:09,600
array

43
00:01:09,600 --> 00:01:11,830
array
students error is nothing but is a

44
00:01:11,830 --> 00:01:11,840
students error is nothing but is a

45
00:01:11,840 --> 00:01:13,429
students error is nothing but is a
collection of homogeneous

46
00:01:13,429 --> 00:01:13,439
collection of homogeneous

47
00:01:13,439 --> 00:01:16,230
collection of homogeneous
elements where each and every elements

48
00:01:16,230 --> 00:01:16,240
elements where each and every elements

49
00:01:16,240 --> 00:01:18,870
elements where each and every elements
are stored in a sequential memory

50
00:01:18,870 --> 00:01:18,880
are stored in a sequential memory

51
00:01:18,880 --> 00:01:21,270
are stored in a sequential memory
okay so when the elements are stored in

52
00:01:21,270 --> 00:01:21,280
okay so when the elements are stored in

53
00:01:21,280 --> 00:01:22,630
okay so when the elements are stored in
a sequential manner

54
00:01:22,630 --> 00:01:22,640
a sequential manner

55
00:01:22,640 --> 00:01:25,030
a sequential manner
and in the continuous form in the memory

56
00:01:25,030 --> 00:01:25,040
and in the continuous form in the memory

57
00:01:25,040 --> 00:01:25,670
and in the continuous form in the memory
then

58
00:01:25,670 --> 00:01:25,680
then

59
00:01:25,680 --> 00:01:29,510
then
that is known as an m so here i am just

60
00:01:29,510 --> 00:01:29,520
that is known as an m so here i am just

61
00:01:29,520 --> 00:01:31,030
that is known as an m so here i am just
showing you one example

62
00:01:31,030 --> 00:01:31,040
showing you one example

63
00:01:31,040 --> 00:01:32,469
showing you one example
that whatsapp what do you mean by the

64
00:01:32,469 --> 00:01:32,479
that whatsapp what do you mean by the

65
00:01:32,479 --> 00:01:34,870
that whatsapp what do you mean by the
homogeneous homogeneous means students

66
00:01:34,870 --> 00:01:34,880
homogeneous homogeneous means students

67
00:01:34,880 --> 00:01:35,429
homogeneous homogeneous means students
the same

68
00:01:35,429 --> 00:01:35,439
the same

69
00:01:35,439 --> 00:01:38,310
the same
type and elements here stored in a

70
00:01:38,310 --> 00:01:38,320
type and elements here stored in a

71
00:01:38,320 --> 00:01:39,109
type and elements here stored in a
continuous

72
00:01:39,109 --> 00:01:39,119
continuous

73
00:01:39,119 --> 00:01:43,590
continuous
fashion here in array index starts from

74
00:01:43,590 --> 00:01:43,600
fashion here in array index starts from

75
00:01:43,600 --> 00:01:46,710
fashion here in array index starts from
0 make sure then

76
00:01:46,710 --> 00:01:46,720
0 make sure then

77
00:01:46,720 --> 00:01:49,990
0 make sure then
let's go ahead syntax that's

78
00:01:49,990 --> 00:01:50,000
let's go ahead syntax that's

79
00:01:50,000 --> 00:01:52,950
let's go ahead syntax that's
how to define an array so students we

80
00:01:52,950 --> 00:01:52,960
how to define an array so students we

81
00:01:52,960 --> 00:01:53,749
how to define an array so students we
can define an

82
00:01:53,749 --> 00:01:53,759
can define an

83
00:01:53,759 --> 00:01:56,630
can define an
array like first we need to write data

84
00:01:56,630 --> 00:01:56,640
array like first we need to write data

85
00:01:56,640 --> 00:01:57,270
array like first we need to write data
type

86
00:01:57,270 --> 00:01:57,280
type

87
00:01:57,280 --> 00:02:00,550
type
then array name then science

88
00:02:00,550 --> 00:02:00,560
then array name then science

89
00:02:00,560 --> 00:02:04,550
then array name then science
data type can be integer float character

90
00:02:04,550 --> 00:02:04,560
data type can be integer float character

91
00:02:04,560 --> 00:02:07,350
data type can be integer float character
animal and a name should be meaningful

92
00:02:07,350 --> 00:02:07,360
animal and a name should be meaningful

93
00:02:07,360 --> 00:02:07,990
animal and a name should be meaningful
make sure

94
00:02:07,990 --> 00:02:08,000
make sure

95
00:02:08,000 --> 00:02:10,630
make sure
if you want to make an array of students

96
00:02:10,630 --> 00:02:10,640
if you want to make an array of students

97
00:02:10,640 --> 00:02:12,150
if you want to make an array of students
then just give it a name like

98
00:02:12,150 --> 00:02:12,160
then just give it a name like

99
00:02:12,160 --> 00:02:15,510
then just give it a name like
std student or students fine

100
00:02:15,510 --> 00:02:15,520
std student or students fine

101
00:02:15,520 --> 00:02:17,990
std student or students fine
and in square brackets we are writing

102
00:02:17,990 --> 00:02:18,000
and in square brackets we are writing

103
00:02:18,000 --> 00:02:19,670
and in square brackets we are writing
the size of the array

104
00:02:19,670 --> 00:02:19,680
the size of the array

105
00:02:19,680 --> 00:02:22,710
the size of the array
size of the array like 5 10

106
00:02:22,710 --> 00:02:22,720
size of the array like 5 10

107
00:02:22,720 --> 00:02:25,750
size of the array like 5 10
anything so if i want to declare an

108
00:02:25,750 --> 00:02:25,760
anything so if i want to declare an

109
00:02:25,760 --> 00:02:29,030
anything so if i want to declare an
array of size 10 of integer type

110
00:02:29,030 --> 00:02:29,040
array of size 10 of integer type

111
00:02:29,040 --> 00:02:33,110
array of size 10 of integer type
then it can be like example integer

112
00:02:33,110 --> 00:02:33,120
then it can be like example integer

113
00:02:33,120 --> 00:02:36,790
then it can be like example integer
a double r of 10. fine

114
00:02:36,790 --> 00:02:36,800
a double r of 10. fine

115
00:02:36,800 --> 00:02:40,229
a double r of 10. fine
now let's go ahead see our the next

116
00:02:40,229 --> 00:02:40,239
now let's go ahead see our the next

117
00:02:40,239 --> 00:02:40,710
now let's go ahead see our the next
topic

118
00:02:40,710 --> 00:02:40,720
topic

119
00:02:40,720 --> 00:02:44,309
topic
is memory representation in 1d

120
00:02:44,309 --> 00:02:44,319
is memory representation in 1d

121
00:02:44,319 --> 00:02:47,830
is memory representation in 1d
so students here you can see that

122
00:02:47,830 --> 00:02:47,840
so students here you can see that

123
00:02:47,840 --> 00:02:50,949
so students here you can see that
the integer array of 5

124
00:02:50,949 --> 00:02:50,959
the integer array of 5

125
00:02:50,959 --> 00:02:53,750
the integer array of 5
students if i am taking the elements of

126
00:02:53,750 --> 00:02:53,760
students if i am taking the elements of

127
00:02:53,760 --> 00:02:54,470
students if i am taking the elements of
5

128
00:02:54,470 --> 00:02:54,480
5

129
00:02:54,480 --> 00:02:57,270
5
array with size 5 then it is like a

130
00:02:57,270 --> 00:02:57,280
array with size 5 then it is like a

131
00:02:57,280 --> 00:02:58,949
array with size 5 then it is like a
integer a of 5

132
00:02:58,949 --> 00:02:58,959
integer a of 5

133
00:02:58,959 --> 00:03:01,750
integer a of 5
so integer a contains 5 elements

134
00:03:01,750 --> 00:03:01,760
so integer a contains 5 elements

135
00:03:01,760 --> 00:03:03,350
so integer a contains 5 elements
elements are like this

136
00:03:03,350 --> 00:03:03,360
elements are like this

137
00:03:03,360 --> 00:03:06,470
elements are like this
you can see in this figure like 10 20 30

138
00:03:06,470 --> 00:03:06,480
you can see in this figure like 10 20 30

139
00:03:06,480 --> 00:03:07,830
you can see in this figure like 10 20 30
40 and 50

140
00:03:07,830 --> 00:03:07,840
40 and 50

141
00:03:07,840 --> 00:03:10,710
40 and 50
so as you know the array stored in a

142
00:03:10,710 --> 00:03:10,720
so as you know the array stored in a

143
00:03:10,720 --> 00:03:12,390
so as you know the array stored in a
continuous memory

144
00:03:12,390 --> 00:03:12,400
continuous memory

145
00:03:12,400 --> 00:03:15,750
continuous memory
allocations so if my first element

146
00:03:15,750 --> 00:03:15,760
allocations so if my first element

147
00:03:15,760 --> 00:03:18,790
allocations so if my first element
address is 1000 then the next

148
00:03:18,790 --> 00:03:18,800
address is 1000 then the next

149
00:03:18,800 --> 00:03:22,390
address is 1000 then the next
can be implemented as per the size is

150
00:03:22,390 --> 00:03:22,400
can be implemented as per the size is

151
00:03:22,400 --> 00:03:25,030
can be implemented as per the size is
such like if this is our array of

152
00:03:25,030 --> 00:03:25,040
such like if this is our array of

153
00:03:25,040 --> 00:03:26,309
such like if this is our array of
integer type

154
00:03:26,309 --> 00:03:26,319
integer type

155
00:03:26,319 --> 00:03:29,509
integer type
so the next element size can be two byte

156
00:03:29,509 --> 00:03:29,519
so the next element size can be two byte

157
00:03:29,519 --> 00:03:31,990
so the next element size can be two byte
incremented like one double 0 2 1

158
00:03:31,990 --> 00:03:32,000
incremented like one double 0 2 1

159
00:03:32,000 --> 00:03:35,430
incremented like one double 0 2 1
0 4 6 8 such like this so

160
00:03:35,430 --> 00:03:35,440
0 4 6 8 such like this so

161
00:03:35,440 --> 00:03:38,949
0 4 6 8 such like this so
the first element of array is

162
00:03:38,949 --> 00:03:38,959
the first element of array is

163
00:03:38,959 --> 00:03:42,710
the first element of array is
known as a of 0 here our variable name

164
00:03:42,710 --> 00:03:42,720
known as a of 0 here our variable name

165
00:03:42,720 --> 00:03:43,110
known as a of 0 here our variable name
is

166
00:03:43,110 --> 00:03:43,120
is

167
00:03:43,120 --> 00:03:46,309
is
a and the element situated at index

168
00:03:46,309 --> 00:03:46,319
a and the element situated at index

169
00:03:46,319 --> 00:03:49,430
a and the element situated at index
0 that's why the first element is

170
00:03:49,430 --> 00:03:49,440
0 that's why the first element is

171
00:03:49,440 --> 00:03:53,429
0 that's why the first element is
a of 0 fine so in green color you can

172
00:03:53,429 --> 00:03:53,439
a of 0 fine so in green color you can

173
00:03:53,439 --> 00:03:53,830
a of 0 fine so in green color you can
see

174
00:03:53,830 --> 00:03:53,840
see

175
00:03:53,840 --> 00:03:56,149
see
the array indices in the brown color you

176
00:03:56,149 --> 00:03:56,159
the array indices in the brown color you

177
00:03:56,159 --> 00:03:57,270
the array indices in the brown color you
can see like the

178
00:03:57,270 --> 00:03:57,280
can see like the

179
00:03:57,280 --> 00:04:00,710
can see like the
array addresses okay fine now

180
00:04:00,710 --> 00:04:00,720
array addresses okay fine now

181
00:04:00,720 --> 00:04:03,830
array addresses okay fine now
the next students a of 0

182
00:04:03,830 --> 00:04:03,840
the next students a of 0

183
00:04:03,840 --> 00:04:06,949
the next students a of 0
a of 0 is about the first element

184
00:04:06,949 --> 00:04:06,959
a of 0 is about the first element

185
00:04:06,959 --> 00:04:10,229
a of 0 is about the first element
which is also known as the base element

186
00:04:10,229 --> 00:04:10,239
which is also known as the base element

187
00:04:10,239 --> 00:04:13,509
which is also known as the base element
fine because ls starts from a of 0

188
00:04:13,509 --> 00:04:13,519
fine because ls starts from a of 0

189
00:04:13,519 --> 00:04:17,030
fine because ls starts from a of 0
now the element stored at a of 0 is 10

190
00:04:17,030 --> 00:04:17,040
now the element stored at a of 0 is 10

191
00:04:17,040 --> 00:04:20,229
now the element stored at a of 0 is 10
and address of a of 0 is 1000

192
00:04:20,229 --> 00:04:20,239
and address of a of 0 is 1000

193
00:04:20,239 --> 00:04:23,749
and address of a of 0 is 1000
next element addresses 1 0 2 which is

194
00:04:23,749 --> 00:04:23,759
next element addresses 1 0 2 which is

195
00:04:23,759 --> 00:04:27,270
next element addresses 1 0 2 which is
age of 1 so students here you can easily

196
00:04:27,270 --> 00:04:27,280
age of 1 so students here you can easily

197
00:04:27,280 --> 00:04:27,990
age of 1 so students here you can easily
say that

198
00:04:27,990 --> 00:04:28,000
say that

199
00:04:28,000 --> 00:04:31,350
say that
if my the array is of integer type then

200
00:04:31,350 --> 00:04:31,360
if my the array is of integer type then

201
00:04:31,360 --> 00:04:33,909
if my the array is of integer type then
the elements can be implemented the

202
00:04:33,909 --> 00:04:33,919
the elements can be implemented the

203
00:04:33,919 --> 00:04:36,390
the elements can be implemented the
address can be implemented in two bytes

204
00:04:36,390 --> 00:04:36,400
address can be implemented in two bytes

205
00:04:36,400 --> 00:04:38,550
address can be implemented in two bytes
but what happens if i have the floating

206
00:04:38,550 --> 00:04:38,560
but what happens if i have the floating

207
00:04:38,560 --> 00:04:39,909
but what happens if i have the floating
type of panel

208
00:04:39,909 --> 00:04:39,919
type of panel

209
00:04:39,919 --> 00:04:42,230
type of panel
students if you have a floating type of

210
00:04:42,230 --> 00:04:42,240
students if you have a floating type of

211
00:04:42,240 --> 00:04:42,950
students if you have a floating type of
array

212
00:04:42,950 --> 00:04:42,960
array

213
00:04:42,960 --> 00:04:46,070
array
then your addresses can be incremented

214
00:04:46,070 --> 00:04:46,080
then your addresses can be incremented

215
00:04:46,080 --> 00:04:49,110
then your addresses can be incremented
four bytes like a of zero is at one

216
00:04:49,110 --> 00:04:49,120
four bytes like a of zero is at one

217
00:04:49,120 --> 00:04:49,749
four bytes like a of zero is at one
thousand

218
00:04:49,749 --> 00:04:49,759
thousand

219
00:04:49,759 --> 00:04:51,990
thousand
then a of one can be at one double zero

220
00:04:51,990 --> 00:04:52,000
then a of one can be at one double zero

221
00:04:52,000 --> 00:04:53,749
then a of one can be at one double zero
four one double zero eight

222
00:04:53,749 --> 00:04:53,759
four one double zero eight

223
00:04:53,759 --> 00:04:57,189
four one double zero eight
one is one zero one two okay now

224
00:04:57,189 --> 00:04:57,199
one is one zero one two okay now

225
00:04:57,199 --> 00:04:59,990
one is one zero one two okay now
what about the base address whatever the

226
00:04:59,990 --> 00:05:00,000
what about the base address whatever the

227
00:05:00,000 --> 00:05:02,550
what about the base address whatever the
address of the first element is known as

228
00:05:02,550 --> 00:05:02,560
address of the first element is known as

229
00:05:02,560 --> 00:05:05,270
address of the first element is known as
base address make it clear the an

230
00:05:05,270 --> 00:05:05,280
base address make it clear the an

231
00:05:05,280 --> 00:05:07,350
base address make it clear the an
address of the first element of the

232
00:05:07,350 --> 00:05:07,360
address of the first element of the

233
00:05:07,360 --> 00:05:08,790
address of the first element of the
array is known as

234
00:05:08,790 --> 00:05:08,800
array is known as

235
00:05:08,800 --> 00:05:11,670
array is known as
base address here the base address is

236
00:05:11,670 --> 00:05:11,680
base address here the base address is

237
00:05:11,680 --> 00:05:12,469
base address here the base address is
thousand

238
00:05:12,469 --> 00:05:12,479
thousand

239
00:05:12,479 --> 00:05:15,749
thousand
now the base address address of the

240
00:05:15,749 --> 00:05:15,759
now the base address address of the

241
00:05:15,759 --> 00:05:16,710
now the base address address of the
first

242
00:05:16,710 --> 00:05:16,720
first

243
00:05:16,720 --> 00:05:19,350
first
a of zero address is thousand now how

244
00:05:19,350 --> 00:05:19,360
a of zero address is thousand now how

245
00:05:19,360 --> 00:05:21,510
a of zero address is thousand now how
many memory occupied by this

246
00:05:21,510 --> 00:05:21,520
many memory occupied by this

247
00:05:21,520 --> 00:05:24,150
many memory occupied by this
students the total memory occupied by

248
00:05:24,150 --> 00:05:24,160
students the total memory occupied by

249
00:05:24,160 --> 00:05:24,870
students the total memory occupied by
this whole

250
00:05:24,870 --> 00:05:24,880
this whole

251
00:05:24,880 --> 00:05:27,909
this whole
a array is 10 minutes

252
00:05:27,909 --> 00:05:27,919
a array is 10 minutes

253
00:05:27,919 --> 00:05:29,909
a array is 10 minutes
why because there are five elements are

254
00:05:29,909 --> 00:05:29,919
why because there are five elements are

255
00:05:29,919 --> 00:05:31,590
why because there are five elements are
there each and every element

256
00:05:31,590 --> 00:05:31,600
there each and every element

257
00:05:31,600 --> 00:05:34,310
there each and every element
of type integer and integer contains two

258
00:05:34,310 --> 00:05:34,320
of type integer and integer contains two

259
00:05:34,320 --> 00:05:34,790
of type integer and integer contains two
bytes

260
00:05:34,790 --> 00:05:34,800
bytes

261
00:05:34,800 --> 00:05:38,469
bytes
so that becomes 10 max so

262
00:05:38,469 --> 00:05:38,479
so that becomes 10 max so

263
00:05:38,479 --> 00:05:40,950
so that becomes 10 max so
if the array is of protein type then the

264
00:05:40,950 --> 00:05:40,960
if the array is of protein type then the

265
00:05:40,960 --> 00:05:41,670
if the array is of protein type then the
memory

266
00:05:41,670 --> 00:05:41,680
memory

267
00:05:41,680 --> 00:05:45,590
memory
can be 5 into 4 which is equal to 20

268
00:05:45,590 --> 00:05:45,600
can be 5 into 4 which is equal to 20

269
00:05:45,600 --> 00:05:46,390
can be 5 into 4 which is equal to 20
bytes

270
00:05:46,390 --> 00:05:46,400
bytes

271
00:05:46,400 --> 00:05:49,430
bytes
fine so now let's start with the memory

272
00:05:49,430 --> 00:05:49,440
fine so now let's start with the memory

273
00:05:49,440 --> 00:05:50,390
fine so now let's start with the memory
calculation

274
00:05:50,390 --> 00:05:50,400
calculation

275
00:05:50,400 --> 00:05:54,070
calculation
or example of only f

276
00:05:54,070 --> 00:05:54,080
or example of only f

277
00:05:54,080 --> 00:05:56,230
or example of only f
students here you can see the calculate

278
00:05:56,230 --> 00:05:56,240
students here you can see the calculate

279
00:05:56,240 --> 00:05:58,070
students here you can see the calculate
the question is like this

280
00:05:58,070 --> 00:05:58,080
the question is like this

281
00:05:58,080 --> 00:06:01,590
the question is like this
to calculate the address of element

282
00:06:01,590 --> 00:06:01,600
to calculate the address of element

283
00:06:01,600 --> 00:06:04,550
to calculate the address of element
in single dimensional error fine

284
00:06:04,550 --> 00:06:04,560
in single dimensional error fine

285
00:06:04,560 --> 00:06:06,710
in single dimensional error fine
students formula for that to calculate

286
00:06:06,710 --> 00:06:06,720
students formula for that to calculate

287
00:06:06,720 --> 00:06:07,990
students formula for that to calculate
the address of

288
00:06:07,990 --> 00:06:08,000
the address of

289
00:06:08,000 --> 00:06:10,710
the address of
element in single dimensional array is

290
00:06:10,710 --> 00:06:10,720
element in single dimensional array is

291
00:06:10,720 --> 00:06:12,469
element in single dimensional array is
air phi is equal to

292
00:06:12,469 --> 00:06:12,479
air phi is equal to

293
00:06:12,479 --> 00:06:15,590
air phi is equal to
base address b a briefly see

294
00:06:15,590 --> 00:06:15,600
base address b a briefly see

295
00:06:15,600 --> 00:06:18,710
base address b a briefly see
a of phi is equal to base address b

296
00:06:18,710 --> 00:06:18,720
a of phi is equal to base address b

297
00:06:18,720 --> 00:06:22,070
a of phi is equal to base address b
s stands for this address plus i minus

298
00:06:22,070 --> 00:06:22,080
s stands for this address plus i minus

299
00:06:22,080 --> 00:06:24,469
s stands for this address plus i minus
l star size star that means

300
00:06:24,469 --> 00:06:24,479
l star size star that means

301
00:06:24,479 --> 00:06:26,309
l star size star that means
multiplication do not forget that

302
00:06:26,309 --> 00:06:26,319
multiplication do not forget that

303
00:06:26,319 --> 00:06:29,909
multiplication do not forget that
so i that means index which

304
00:06:29,909 --> 00:06:29,919
so i that means index which

305
00:06:29,919 --> 00:06:31,830
so i that means index which
on which the address we want to find it

306
00:06:31,830 --> 00:06:31,840
on which the address we want to find it

307
00:06:31,840 --> 00:06:33,110
on which the address we want to find it
out then

308
00:06:33,110 --> 00:06:33,120
out then

309
00:06:33,120 --> 00:06:36,150
out then
l l means lower bound okay so what do

310
00:06:36,150 --> 00:06:36,160
l l means lower bound okay so what do

311
00:06:36,160 --> 00:06:37,350
l l means lower bound okay so what do
you mean by the lower one

312
00:06:37,350 --> 00:06:37,360
you mean by the lower one

313
00:06:37,360 --> 00:06:39,909
you mean by the lower one
students if we have an array of size

314
00:06:39,909 --> 00:06:39,919
students if we have an array of size

315
00:06:39,919 --> 00:06:40,469
students if we have an array of size
five

316
00:06:40,469 --> 00:06:40,479
five

317
00:06:40,479 --> 00:06:43,350
five
then index starts from zero that's why

318
00:06:43,350 --> 00:06:43,360
then index starts from zero that's why

319
00:06:43,360 --> 00:06:45,029
then index starts from zero that's why
the elements goes like this

320
00:06:45,029 --> 00:06:45,039
the elements goes like this

321
00:06:45,039 --> 00:06:48,230
the elements goes like this
a of zero one two three and four

322
00:06:48,230 --> 00:06:48,240
a of zero one two three and four

323
00:06:48,240 --> 00:06:51,270
a of zero one two three and four
so the zero is known as zero is known as

324
00:06:51,270 --> 00:06:51,280
so the zero is known as zero is known as

325
00:06:51,280 --> 00:06:52,790
so the zero is known as zero is known as
lower bound of the array

326
00:06:52,790 --> 00:06:52,800
lower bound of the array

327
00:06:52,800 --> 00:06:55,510
lower bound of the array
and four is known as upper bound of the

328
00:06:55,510 --> 00:06:55,520
and four is known as upper bound of the

329
00:06:55,520 --> 00:06:56,710
and four is known as upper bound of the
array

330
00:06:56,710 --> 00:06:56,720
array

331
00:06:56,720 --> 00:07:00,309
array
fine so now just the i is index

332
00:07:00,309 --> 00:07:00,319
fine so now just the i is index

333
00:07:00,319 --> 00:07:02,710
fine so now just the i is index
b a that means less address l that means

334
00:07:02,710 --> 00:07:02,720
b a that means less address l that means

335
00:07:02,720 --> 00:07:03,589
b a that means less address l that means
lower amount

336
00:07:03,589 --> 00:07:03,599
lower amount

337
00:07:03,599 --> 00:07:05,510
lower amount
and the total number of elements are in

338
00:07:05,510 --> 00:07:05,520
and the total number of elements are in

339
00:07:05,520 --> 00:07:07,110
and the total number of elements are in
the array is

340
00:07:07,110 --> 00:07:07,120
the array is

341
00:07:07,120 --> 00:07:10,390
the array is
u minus l plus 1 just make sure

342
00:07:10,390 --> 00:07:10,400
u minus l plus 1 just make sure

343
00:07:10,400 --> 00:07:13,430
u minus l plus 1 just make sure
what c please focus on this formula

344
00:07:13,430 --> 00:07:13,440
what c please focus on this formula

345
00:07:13,440 --> 00:07:17,350
what c please focus on this formula
that u minus l plus 1 q means upper

346
00:07:17,350 --> 00:07:17,360
that u minus l plus 1 q means upper

347
00:07:17,360 --> 00:07:17,749
that u minus l plus 1 q means upper
bound

348
00:07:17,749 --> 00:07:17,759
bound

349
00:07:17,759 --> 00:07:20,390
bound
l means lower bound plus 1 that is the

350
00:07:20,390 --> 00:07:20,400
l means lower bound plus 1 that is the

351
00:07:20,400 --> 00:07:22,390
l means lower bound plus 1 that is the
total size of the elements in

352
00:07:22,390 --> 00:07:22,400
total size of the elements in

353
00:07:22,400 --> 00:07:24,870
total size of the elements in
error fine so let's start with the

354
00:07:24,870 --> 00:07:24,880
error fine so let's start with the

355
00:07:24,880 --> 00:07:25,589
error fine so let's start with the
example

356
00:07:25,589 --> 00:07:25,599
example

357
00:07:25,599 --> 00:07:28,070
example
the question is calculate the address of

358
00:07:28,070 --> 00:07:28,080
the question is calculate the address of

359
00:07:28,080 --> 00:07:29,189
the question is calculate the address of
a of 6

360
00:07:29,189 --> 00:07:29,199
a of 6

361
00:07:29,199 --> 00:07:32,390
a of 6
calculate the address of a of 6 if

362
00:07:32,390 --> 00:07:32,400
calculate the address of a of 6 if

363
00:07:32,400 --> 00:07:35,430
calculate the address of a of 6 if
the given array is a of 9 so

364
00:07:35,430 --> 00:07:35,440
the given array is a of 9 so

365
00:07:35,440 --> 00:07:37,830
the given array is a of 9 so
here we have the total size of the

366
00:07:37,830 --> 00:07:37,840
here we have the total size of the

367
00:07:37,840 --> 00:07:38,469
here we have the total size of the
elements

368
00:07:38,469 --> 00:07:38,479
elements

369
00:07:38,479 --> 00:07:42,230
elements
a of 9 arrays a of 9 so total 9 elements

370
00:07:42,230 --> 00:07:42,240
a of 9 arrays a of 9 so total 9 elements

371
00:07:42,240 --> 00:07:42,950
a of 9 arrays a of 9 so total 9 elements
are there

372
00:07:42,950 --> 00:07:42,960
are there

373
00:07:42,960 --> 00:07:45,510
are there
fine what we need to find it out we need

374
00:07:45,510 --> 00:07:45,520
fine what we need to find it out we need

375
00:07:45,520 --> 00:07:45,990
fine what we need to find it out we need
to find

376
00:07:45,990 --> 00:07:46,000
to find

377
00:07:46,000 --> 00:07:49,110
to find
out the address of a of 6 so

378
00:07:49,110 --> 00:07:49,120
out the address of a of 6 so

379
00:07:49,120 --> 00:07:52,070
out the address of a of 6 so
our i becomes 6 students base address is

380
00:07:52,070 --> 00:07:52,080
our i becomes 6 students base address is

381
00:07:52,080 --> 00:07:52,790
our i becomes 6 students base address is
also given

382
00:07:52,790 --> 00:07:52,800
also given

383
00:07:52,800 --> 00:07:56,710
also given
base address is 1000 and the array is of

384
00:07:56,710 --> 00:07:56,720
base address is 1000 and the array is of

385
00:07:56,720 --> 00:07:59,830
base address is 1000 and the array is of
integer type l so just put

386
00:07:59,830 --> 00:07:59,840
integer type l so just put

387
00:07:59,840 --> 00:08:02,950
integer type l so just put
all the given data into the elements

388
00:08:02,950 --> 00:08:02,960
all the given data into the elements

389
00:08:02,960 --> 00:08:05,430
all the given data into the elements
such like the first one is i i is equal

390
00:08:05,430 --> 00:08:05,440
such like the first one is i i is equal

391
00:08:05,440 --> 00:08:06,150
such like the first one is i i is equal
to 6

392
00:08:06,150 --> 00:08:06,160
to 6

393
00:08:06,160 --> 00:08:09,589
to 6
size of the array is 9 okay fine

394
00:08:09,589 --> 00:08:09,599
size of the array is 9 okay fine

395
00:08:09,599 --> 00:08:12,469
size of the array is 9 okay fine
then the base address is thousand and

396
00:08:12,469 --> 00:08:12,479
then the base address is thousand and

397
00:08:12,479 --> 00:08:13,830
then the base address is thousand and
what exactly size

398
00:08:13,830 --> 00:08:13,840
what exactly size

399
00:08:13,840 --> 00:08:17,110
what exactly size
size id this size is known as size of

400
00:08:17,110 --> 00:08:17,120
size id this size is known as size of

401
00:08:17,120 --> 00:08:20,390
size id this size is known as size of
the element not array fine here

402
00:08:20,390 --> 00:08:20,400
the element not array fine here

403
00:08:20,400 --> 00:08:23,589
the element not array fine here
the size of the element is two bytes

404
00:08:23,589 --> 00:08:23,599
the size of the element is two bytes

405
00:08:23,599 --> 00:08:25,990
the size of the element is two bytes
just because it is of type and integer

406
00:08:25,990 --> 00:08:26,000
just because it is of type and integer

407
00:08:26,000 --> 00:08:27,110
just because it is of type and integer
type an error

408
00:08:27,110 --> 00:08:27,120
type an error

409
00:08:27,120 --> 00:08:30,390
type an error
fine so size is equal to 2 and array is

410
00:08:30,390 --> 00:08:30,400
fine so size is equal to 2 and array is

411
00:08:30,400 --> 00:08:31,430
fine so size is equal to 2 and array is
a of 9

412
00:08:31,430 --> 00:08:31,440
a of 9

413
00:08:31,440 --> 00:08:34,230
a of 9
so students in a of 9 array the element

414
00:08:34,230 --> 00:08:34,240
so students in a of 9 array the element

415
00:08:34,240 --> 00:08:35,750
so students in a of 9 array the element
starts from index 0

416
00:08:35,750 --> 00:08:35,760
starts from index 0

417
00:08:35,760 --> 00:08:39,269
starts from index 0
and upper bound is a so l is equal to

418
00:08:39,269 --> 00:08:39,279
and upper bound is a so l is equal to

419
00:08:39,279 --> 00:08:42,870
and upper bound is a so l is equal to
0 and u is equal to 8 fine

420
00:08:42,870 --> 00:08:42,880
0 and u is equal to 8 fine

421
00:08:42,880 --> 00:08:45,509
0 and u is equal to 8 fine
so next is to put these values in the

422
00:08:45,509 --> 00:08:45,519
so next is to put these values in the

423
00:08:45,519 --> 00:08:46,230
so next is to put these values in the
formula

424
00:08:46,230 --> 00:08:46,240
formula

425
00:08:46,240 --> 00:08:48,310
formula
the formula is a of i is equal to base

426
00:08:48,310 --> 00:08:48,320
the formula is a of i is equal to base

427
00:08:48,320 --> 00:08:51,269
the formula is a of i is equal to base
address plus i minus l multiply by size

428
00:08:51,269 --> 00:08:51,279
address plus i minus l multiply by size

429
00:08:51,279 --> 00:08:54,550
address plus i minus l multiply by size
base address is 1000 i see l

430
00:08:54,550 --> 00:08:54,560
base address is 1000 i see l

431
00:08:54,560 --> 00:08:57,590
base address is 1000 i see l
zero obviously lower bound is zero then

432
00:08:57,590 --> 00:08:57,600
zero obviously lower bound is zero then

433
00:08:57,600 --> 00:09:00,070
zero obviously lower bound is zero then
size is equal to two so our answer is

434
00:09:00,070 --> 00:09:00,080
size is equal to two so our answer is

435
00:09:00,080 --> 00:09:00,949
size is equal to two so our answer is
one zero

436
00:09:00,949 --> 00:09:00,959
one zero

437
00:09:00,959 --> 00:09:03,509
one zero
six two another question is that that

438
00:09:03,509 --> 00:09:03,519
six two another question is that that

439
00:09:03,519 --> 00:09:05,269
six two another question is that that
how many total elements are there

440
00:09:05,269 --> 00:09:05,279
how many total elements are there

441
00:09:05,279 --> 00:09:06,790
how many total elements are there
you can easily find it out with the

442
00:09:06,790 --> 00:09:06,800
you can easily find it out with the

443
00:09:06,800 --> 00:09:08,710
you can easily find it out with the
formula u minus

444
00:09:08,710 --> 00:09:08,720
formula u minus

445
00:09:08,720 --> 00:09:12,150
formula u minus
l plus 1 or in this you can easily get

446
00:09:12,150 --> 00:09:12,160
l plus 1 or in this you can easily get

447
00:09:12,160 --> 00:09:13,829
l plus 1 or in this you can easily get
it that nine elements are there but

448
00:09:13,829 --> 00:09:13,839
it that nine elements are there but

449
00:09:13,839 --> 00:09:16,070
it that nine elements are there but
how can we get it from the formula upper

450
00:09:16,070 --> 00:09:16,080
how can we get it from the formula upper

451
00:09:16,080 --> 00:09:17,590
how can we get it from the formula upper
bound students

452
00:09:17,590 --> 00:09:17,600
bound students

453
00:09:17,600 --> 00:09:20,870
bound students
upper bound is

454
00:09:20,870 --> 00:09:20,880
upper bound is

455
00:09:20,880 --> 00:09:23,990
upper bound is
forgot students upper bound is

456
00:09:23,990 --> 00:09:24,000
forgot students upper bound is

457
00:09:24,000 --> 00:09:27,430
forgot students upper bound is
8 minus l is 0

458
00:09:27,430 --> 00:09:27,440
8 minus l is 0

459
00:09:27,440 --> 00:09:30,470
8 minus l is 0
plus 1 so 8 plus 1 becomes 9

460
00:09:30,470 --> 00:09:30,480
plus 1 so 8 plus 1 becomes 9

461
00:09:30,480 --> 00:09:33,509
plus 1 so 8 plus 1 becomes 9
so here 9 elements are there now i am

462
00:09:33,509 --> 00:09:33,519
so here 9 elements are there now i am

463
00:09:33,519 --> 00:09:34,310
so here 9 elements are there now i am
taking the next

464
00:09:34,310 --> 00:09:34,320
taking the next

465
00:09:34,320 --> 00:09:37,509
taking the next
example next example is the calculate

466
00:09:37,509 --> 00:09:37,519
example next example is the calculate

467
00:09:37,519 --> 00:09:39,030
example next example is the calculate
the address of elements in single

468
00:09:39,030 --> 00:09:39,040
the address of elements in single

469
00:09:39,040 --> 00:09:40,310
the address of elements in single
dimensional error

470
00:09:40,310 --> 00:09:40,320
dimensional error

471
00:09:40,320 --> 00:09:43,670
dimensional error
example 2 c must create the question

472
00:09:43,670 --> 00:09:43,680
example 2 c must create the question

473
00:09:43,680 --> 00:09:44,230
example 2 c must create the question
first

474
00:09:44,230 --> 00:09:44,240
first

475
00:09:44,240 --> 00:09:46,790
first
the question is calculate the address of

476
00:09:46,790 --> 00:09:46,800
the question is calculate the address of

477
00:09:46,800 --> 00:09:48,389
the question is calculate the address of
m of minus 3

478
00:09:48,389 --> 00:09:48,399
m of minus 3

479
00:09:48,399 --> 00:09:51,670
m of minus 3
m of minus 3 where the array is

480
00:09:51,670 --> 00:09:51,680
m of minus 3 where the array is

481
00:09:51,680 --> 00:09:54,710
m of minus 3 where the array is
m of minus 9 dot dot dot 7

482
00:09:54,710 --> 00:09:54,720
m of minus 9 dot dot dot 7

483
00:09:54,720 --> 00:09:58,470
m of minus 9 dot dot dot 7
students here m of minus 9 triple dot 7

484
00:09:58,470 --> 00:09:58,480
students here m of minus 9 triple dot 7

485
00:09:58,480 --> 00:10:01,190
students here m of minus 9 triple dot 7
this is the range of the array indexes

486
00:10:01,190 --> 00:10:01,200
this is the range of the array indexes

487
00:10:01,200 --> 00:10:01,829
this is the range of the array indexes
range of

488
00:10:01,829 --> 00:10:01,839
range of

489
00:10:01,839 --> 00:10:04,710
range of
either array indexes minus 9 is a lower

490
00:10:04,710 --> 00:10:04,720
either array indexes minus 9 is a lower

491
00:10:04,720 --> 00:10:05,269
either array indexes minus 9 is a lower
amount

492
00:10:05,269 --> 00:10:05,279
amount

493
00:10:05,279 --> 00:10:08,470
amount
and 7 is the upper part so make sure

494
00:10:08,470 --> 00:10:08,480
and 7 is the upper part so make sure

495
00:10:08,480 --> 00:10:11,670
and 7 is the upper part so make sure
that here this minus 9 and 7 is not this

496
00:10:11,670 --> 00:10:11,680
that here this minus 9 and 7 is not this

497
00:10:11,680 --> 00:10:13,430
that here this minus 9 and 7 is not this
two dimensional array but it shows the

498
00:10:13,430 --> 00:10:13,440
two dimensional array but it shows the

499
00:10:13,440 --> 00:10:15,350
two dimensional array but it shows the
single dimensional array but the range

500
00:10:15,350 --> 00:10:15,360
single dimensional array but the range

501
00:10:15,360 --> 00:10:15,990
single dimensional array but the range
of

502
00:10:15,990 --> 00:10:16,000
of

503
00:10:16,000 --> 00:10:19,910
of
indexes fine so here we need to find out

504
00:10:19,910 --> 00:10:19,920
indexes fine so here we need to find out

505
00:10:19,920 --> 00:10:20,790
indexes fine so here we need to find out
the address of

506
00:10:20,790 --> 00:10:20,800
the address of

507
00:10:20,800 --> 00:10:23,590
the address of
m of minus 3 the given array is m of

508
00:10:23,590 --> 00:10:23,600
m of minus 3 the given array is m of

509
00:10:23,600 --> 00:10:24,389
m of minus 3 the given array is m of
minus 9

510
00:10:24,389 --> 00:10:24,399
minus 9

511
00:10:24,399 --> 00:10:27,509
minus 9
to 7 minus 9 dot dot dot 7

512
00:10:27,509 --> 00:10:27,519
to 7 minus 9 dot dot dot 7

513
00:10:27,519 --> 00:10:30,630
to 7 minus 9 dot dot dot 7
that means minus 9 to 7 with the base

514
00:10:30,630 --> 00:10:30,640
that means minus 9 to 7 with the base

515
00:10:30,640 --> 00:10:31,990
that means minus 9 to 7 with the base
address one double zero

516
00:10:31,990 --> 00:10:32,000
address one double zero

517
00:10:32,000 --> 00:10:35,110
address one double zero
two fine so it can be a floating type

518
00:10:35,110 --> 00:10:35,120
two fine so it can be a floating type

519
00:10:35,120 --> 00:10:35,590
two fine so it can be a floating type
array

520
00:10:35,590 --> 00:10:35,600
array

521
00:10:35,600 --> 00:10:37,990
array
students the array type is also given

522
00:10:37,990 --> 00:10:38,000
students the array type is also given

523
00:10:38,000 --> 00:10:40,230
students the array type is also given
it's a floating type error

524
00:10:40,230 --> 00:10:40,240
it's a floating type error

525
00:10:40,240 --> 00:10:42,470
it's a floating type error
okay also calculate the number of

526
00:10:42,470 --> 00:10:42,480
okay also calculate the number of

527
00:10:42,480 --> 00:10:43,670
okay also calculate the number of
elements in array

528
00:10:43,670 --> 00:10:43,680
elements in array

529
00:10:43,680 --> 00:10:46,870
elements in array
so we need to also calculate the number

530
00:10:46,870 --> 00:10:46,880
so we need to also calculate the number

531
00:10:46,880 --> 00:10:48,470
so we need to also calculate the number
of elements in the error

532
00:10:48,470 --> 00:10:48,480
of elements in the error

533
00:10:48,480 --> 00:10:51,269
of elements in the error
so in this question students we have

534
00:10:51,269 --> 00:10:51,279
so in this question students we have

535
00:10:51,279 --> 00:10:52,630
so in this question students we have
each and every data

536
00:10:52,630 --> 00:10:52,640
each and every data

537
00:10:52,640 --> 00:10:55,910
each and every data
just put it down in the elements

538
00:10:55,910 --> 00:10:55,920
just put it down in the elements

539
00:10:55,920 --> 00:10:58,710
just put it down in the elements
formula formula is total number of

540
00:10:58,710 --> 00:10:58,720
formula formula is total number of

541
00:10:58,720 --> 00:11:01,829
formula formula is total number of
elements are in array u minus l plus 1

542
00:11:01,829 --> 00:11:01,839
elements are in array u minus l plus 1

543
00:11:01,839 --> 00:11:05,509
elements are in array u minus l plus 1
u minus l plus 1 which is equal to

544
00:11:05,509 --> 00:11:05,519
u minus l plus 1 which is equal to

545
00:11:05,519 --> 00:11:08,710
u minus l plus 1 which is equal to
like 7 minus minus 9 plus 1

546
00:11:08,710 --> 00:11:08,720
like 7 minus minus 9 plus 1

547
00:11:08,720 --> 00:11:12,230
like 7 minus minus 9 plus 1
7 minus 1 minus 9 plus 1 it becomes 70

548
00:11:12,230 --> 00:11:12,240
7 minus 1 minus 9 plus 1 it becomes 70

549
00:11:12,240 --> 00:11:14,389
7 minus 1 minus 9 plus 1 it becomes 70
so here you can see that there are 17

550
00:11:14,389 --> 00:11:14,399
so here you can see that there are 17

551
00:11:14,399 --> 00:11:15,590
so here you can see that there are 17
elements are there

552
00:11:15,590 --> 00:11:15,600
elements are there

553
00:11:15,600 --> 00:11:19,670
elements are there
17 elements are there fine i is equal to

554
00:11:19,670 --> 00:11:19,680
17 elements are there fine i is equal to

555
00:11:19,680 --> 00:11:21,430
17 elements are there fine i is equal to
what do you mean by the i i is equal to

556
00:11:21,430 --> 00:11:21,440
what do you mean by the i i is equal to

557
00:11:21,440 --> 00:11:23,269
what do you mean by the i i is equal to
minus 3 because we need to find the

558
00:11:23,269 --> 00:11:23,279
minus 3 because we need to find the

559
00:11:23,279 --> 00:11:25,190
minus 3 because we need to find the
address of m of minus 3

560
00:11:25,190 --> 00:11:25,200
address of m of minus 3

561
00:11:25,200 --> 00:11:27,590
address of m of minus 3
okay lower bound lower bound is minus

562
00:11:27,590 --> 00:11:27,600
okay lower bound lower bound is minus

563
00:11:27,600 --> 00:11:28,949
okay lower bound lower bound is minus
nine upper bound

564
00:11:28,949 --> 00:11:28,959
nine upper bound

565
00:11:28,959 --> 00:11:31,990
nine upper bound
is seven and size is

566
00:11:31,990 --> 00:11:32,000
is seven and size is

567
00:11:32,000 --> 00:11:34,949
is seven and size is
four fine so just put this whole thing

568
00:11:34,949 --> 00:11:34,959
four fine so just put this whole thing

569
00:11:34,959 --> 00:11:36,230
four fine so just put this whole thing
into the formula

570
00:11:36,230 --> 00:11:36,240
into the formula

571
00:11:36,240 --> 00:11:39,190
into the formula
the formula is a of i is equal to base

572
00:11:39,190 --> 00:11:39,200
the formula is a of i is equal to base

573
00:11:39,200 --> 00:11:39,910
the formula is a of i is equal to base
address

574
00:11:39,910 --> 00:11:39,920
address

575
00:11:39,920 --> 00:11:43,030
address
plus i minus l multiplied by

576
00:11:43,030 --> 00:11:43,040
plus i minus l multiplied by

577
00:11:43,040 --> 00:11:46,630
plus i minus l multiplied by
sine a of phi that means m of minus

578
00:11:46,630 --> 00:11:46,640
sine a of phi that means m of minus

579
00:11:46,640 --> 00:11:49,990
sine a of phi that means m of minus
m of minus three so m of minus three

580
00:11:49,990 --> 00:11:50,000
m of minus three so m of minus three

581
00:11:50,000 --> 00:11:52,230
m of minus three so m of minus three
is equal to base address students base

582
00:11:52,230 --> 00:11:52,240
is equal to base address students base

583
00:11:52,240 --> 00:11:53,829
is equal to base address students base
address is one double zero two

584
00:11:53,829 --> 00:11:53,839
address is one double zero two

585
00:11:53,839 --> 00:11:56,870
address is one double zero two
so one number zero two plus i

586
00:11:56,870 --> 00:11:56,880
so one number zero two plus i

587
00:11:56,880 --> 00:11:59,910
so one number zero two plus i
i that means minus 3 minus minus l

588
00:11:59,910 --> 00:11:59,920
i that means minus 3 minus minus l

589
00:11:59,920 --> 00:12:03,509
i that means minus 3 minus minus l
3 minus 3 minus minus 9 calculating this

590
00:12:03,509 --> 00:12:03,519
3 minus 3 minus minus 9 calculating this

591
00:12:03,519 --> 00:12:07,110
3 minus 3 minus minus 9 calculating this
sum solve it and you get the answer 1 0

592
00:12:07,110 --> 00:12:07,120
sum solve it and you get the answer 1 0

593
00:12:07,120 --> 00:12:10,310
sum solve it and you get the answer 1 0
2 6. so students one zero two six

594
00:12:10,310 --> 00:12:10,320
2 6. so students one zero two six

595
00:12:10,320 --> 00:12:13,350
2 6. so students one zero two six
is our address of the element m of minus

596
00:12:13,350 --> 00:12:13,360
is our address of the element m of minus

597
00:12:13,360 --> 00:12:14,790
is our address of the element m of minus
three

598
00:12:14,790 --> 00:12:14,800
three

599
00:12:14,800 --> 00:12:18,550
three
now go ahead the next topic is memory

600
00:12:18,550 --> 00:12:18,560
now go ahead the next topic is memory

601
00:12:18,560 --> 00:12:19,750
now go ahead the next topic is memory
representation of

602
00:12:19,750 --> 00:12:19,760
representation of

603
00:12:19,760 --> 00:12:21,990
representation of
today this is our last topic of today's

604
00:12:21,990 --> 00:12:22,000
today this is our last topic of today's

605
00:12:22,000 --> 00:12:23,670
today this is our last topic of today's
lecture

606
00:12:23,670 --> 00:12:23,680
lecture

607
00:12:23,680 --> 00:12:26,150
lecture
okay first how can you define or how can

608
00:12:26,150 --> 00:12:26,160
okay first how can you define or how can

609
00:12:26,160 --> 00:12:27,990
okay first how can you define or how can
you write the 2d array you can write it

610
00:12:27,990 --> 00:12:28,000
you write the 2d array you can write it

611
00:12:28,000 --> 00:12:28,790
you write the 2d array you can write it
like this

612
00:12:28,790 --> 00:12:28,800
like this

613
00:12:28,800 --> 00:12:32,150
like this
integer a of 3 3 in teacher a of 3 3 it

614
00:12:32,150 --> 00:12:32,160
integer a of 3 3 in teacher a of 3 3 it

615
00:12:32,160 --> 00:12:32,629
integer a of 3 3 in teacher a of 3 3 it
means

616
00:12:32,629 --> 00:12:32,639
means

617
00:12:32,639 --> 00:12:35,910
means
data type then variable name then

618
00:12:35,910 --> 00:12:35,920
data type then variable name then

619
00:12:35,920 --> 00:12:39,190
data type then variable name then
size of row 10 size of column so

620
00:12:39,190 --> 00:12:39,200
size of row 10 size of column so

621
00:12:39,200 --> 00:12:42,550
size of row 10 size of column so
here integer a of 33 it means it is a

622
00:12:42,550 --> 00:12:42,560
here integer a of 33 it means it is a

623
00:12:42,560 --> 00:12:43,670
here integer a of 33 it means it is a
two dimensional

624
00:12:43,670 --> 00:12:43,680
two dimensional

625
00:12:43,680 --> 00:12:46,870
two dimensional
array so a is a two dimensional m

626
00:12:46,870 --> 00:12:46,880
array so a is a two dimensional m

627
00:12:46,880 --> 00:12:50,470
array so a is a two dimensional m
students here see

628
00:12:50,470 --> 00:12:50,480
students here see

629
00:12:50,480 --> 00:12:53,829
students here see
this table or this matrices this matrix

630
00:12:53,829 --> 00:12:53,839
this table or this matrices this matrix

631
00:12:53,839 --> 00:12:56,150
this table or this matrices this matrix
is nothing but it's a two dimensional

632
00:12:56,150 --> 00:12:56,160
is nothing but it's a two dimensional

633
00:12:56,160 --> 00:12:58,710
is nothing but it's a two dimensional
array i am just showing you how can i

634
00:12:58,710 --> 00:12:58,720
array i am just showing you how can i

635
00:12:58,720 --> 00:13:00,790
array i am just showing you how can i
represent these two dimensional array

636
00:13:00,790 --> 00:13:00,800
represent these two dimensional array

637
00:13:00,800 --> 00:13:01,829
represent these two dimensional array
matrices

638
00:13:01,829 --> 00:13:01,839
matrices

639
00:13:01,839 --> 00:13:04,710
matrices
into the memory fine the first element

640
00:13:04,710 --> 00:13:04,720
into the memory fine the first element

641
00:13:04,720 --> 00:13:06,470
into the memory fine the first element
at 0 0 is at

642
00:13:06,470 --> 00:13:06,480
at 0 0 is at

643
00:13:06,480 --> 00:13:09,509
at 0 0 is at
10 then 20 10 30 so

644
00:13:09,509 --> 00:13:09,519
10 then 20 10 30 so

645
00:13:09,519 --> 00:13:13,269
10 then 20 10 30 so
10 20 30 then 40 50 60

646
00:13:13,269 --> 00:13:13,279
10 20 30 then 40 50 60

647
00:13:13,279 --> 00:13:16,870
10 20 30 then 40 50 60
70 89 so here three cross three matrix

648
00:13:16,870 --> 00:13:16,880
70 89 so here three cross three matrix

649
00:13:16,880 --> 00:13:18,069
70 89 so here three cross three matrix
total we have nine

650
00:13:18,069 --> 00:13:18,079
total we have nine

651
00:13:18,079 --> 00:13:21,350
total we have nine
elements fine so now what next

652
00:13:21,350 --> 00:13:21,360
elements fine so now what next

653
00:13:21,360 --> 00:13:24,629
elements fine so now what next
students we can store the data or we can

654
00:13:24,629 --> 00:13:24,639
students we can store the data or we can

655
00:13:24,639 --> 00:13:26,710
students we can store the data or we can
represent the 2d area in memory

656
00:13:26,710 --> 00:13:26,720
represent the 2d area in memory

657
00:13:26,720 --> 00:13:29,509
represent the 2d area in memory
with two different ways the first way is

658
00:13:29,509 --> 00:13:29,519
with two different ways the first way is

659
00:13:29,519 --> 00:13:30,710
with two different ways the first way is
row major

660
00:13:30,710 --> 00:13:30,720
row major

661
00:13:30,720 --> 00:13:32,790
row major
okay what do you mean by row major

662
00:13:32,790 --> 00:13:32,800
okay what do you mean by row major

663
00:13:32,800 --> 00:13:33,990
okay what do you mean by row major
students this

664
00:13:33,990 --> 00:13:34,000
students this

665
00:13:34,000 --> 00:13:36,710
students this
representation of data is known as

666
00:13:36,710 --> 00:13:36,720
representation of data is known as

667
00:13:36,720 --> 00:13:37,509
representation of data is known as
promising

668
00:13:37,509 --> 00:13:37,519
promising

669
00:13:37,519 --> 00:13:39,509
promising
in rhodometer we are just inserting the

670
00:13:39,509 --> 00:13:39,519
in rhodometer we are just inserting the

671
00:13:39,519 --> 00:13:41,110
in rhodometer we are just inserting the
element provides

672
00:13:41,110 --> 00:13:41,120
element provides

673
00:13:41,120 --> 00:13:44,310
element provides
okay so just say this 10 to 90 i'm just

674
00:13:44,310 --> 00:13:44,320
okay so just say this 10 to 90 i'm just

675
00:13:44,320 --> 00:13:45,350
okay so just say this 10 to 90 i'm just
writing the string

676
00:13:45,350 --> 00:13:45,360
writing the string

677
00:13:45,360 --> 00:13:48,389
writing the string
from 10 to 90 and then what happens

678
00:13:48,389 --> 00:13:48,399
from 10 to 90 and then what happens

679
00:13:48,399 --> 00:13:51,910
from 10 to 90 and then what happens
what happens 10 the address is 10 is

680
00:13:51,910 --> 00:13:51,920
what happens 10 the address is 10 is

681
00:13:51,920 --> 00:13:55,350
what happens 10 the address is 10 is
c first element is 10

682
00:13:55,350 --> 00:13:55,360
c first element is 10

683
00:13:55,360 --> 00:13:58,389
c first element is 10
which is known as a of 0 0 the next is

684
00:13:58,389 --> 00:13:58,399
which is known as a of 0 0 the next is

685
00:13:58,399 --> 00:14:00,470
which is known as a of 0 0 the next is
20 which is a of 0 1

686
00:14:00,470 --> 00:14:00,480
20 which is a of 0 1

687
00:14:00,480 --> 00:14:03,670
20 which is a of 0 1
third will become a of 0 2 so when you

688
00:14:03,670 --> 00:14:03,680
third will become a of 0 2 so when you

689
00:14:03,680 --> 00:14:05,430
third will become a of 0 2 so when you
are just inserting the data according to

690
00:14:05,430 --> 00:14:05,440
are just inserting the data according to

691
00:14:05,440 --> 00:14:06,389
are just inserting the data according to
the row bytes

692
00:14:06,389 --> 00:14:06,399
the row bytes

693
00:14:06,399 --> 00:14:09,670
the row bytes
then it becomes roommate here

694
00:14:09,670 --> 00:14:09,680
then it becomes roommate here

695
00:14:09,680 --> 00:14:12,870
then it becomes roommate here
are the column major

696
00:14:12,870 --> 00:14:12,880
are the column major

697
00:14:12,880 --> 00:14:14,870
are the column major
the column widget data are inserted such

698
00:14:14,870 --> 00:14:14,880
the column widget data are inserted such

699
00:14:14,880 --> 00:14:16,949
the column widget data are inserted such
like this in column measure the data

700
00:14:16,949 --> 00:14:16,959
like this in column measure the data

701
00:14:16,959 --> 00:14:18,069
like this in column measure the data
elements are inserted

702
00:14:18,069 --> 00:14:18,079
elements are inserted

703
00:14:18,079 --> 00:14:20,790
elements are inserted
column bytes but if we just considering

704
00:14:20,790 --> 00:14:20,800
column bytes but if we just considering

705
00:14:20,800 --> 00:14:21,670
column bytes but if we just considering
the column

706
00:14:21,670 --> 00:14:21,680
the column

707
00:14:21,680 --> 00:14:25,110
the column
data for this particular matrixes then

708
00:14:25,110 --> 00:14:25,120
data for this particular matrixes then

709
00:14:25,120 --> 00:14:27,110
data for this particular matrixes then
the data elements are four column

710
00:14:27,110 --> 00:14:27,120
the data elements are four column

711
00:14:27,120 --> 00:14:28,389
the data elements are four column
measure like

712
00:14:28,389 --> 00:14:28,399
measure like

713
00:14:28,399 --> 00:14:31,590
measure like
trend 40 70 then

714
00:14:31,590 --> 00:14:31,600
trend 40 70 then

715
00:14:31,600 --> 00:14:35,310
trend 40 70 then
20 50 80 10 30

716
00:14:35,310 --> 00:14:35,320
20 50 80 10 30

717
00:14:35,320 --> 00:14:39,189
20 50 80 10 30
69 so such like this students we are

718
00:14:39,189 --> 00:14:39,199
69 so such like this students we are

719
00:14:39,199 --> 00:14:41,350
69 so such like this students we are
just inserting the data in the memory

720
00:14:41,350 --> 00:14:41,360
just inserting the data in the memory

721
00:14:41,360 --> 00:14:43,670
just inserting the data in the memory
according to the column bytes so what

722
00:14:43,670 --> 00:14:43,680
according to the column bytes so what

723
00:14:43,680 --> 00:14:44,870
according to the column bytes so what
will become the

724
00:14:44,870 --> 00:14:44,880
will become the

725
00:14:44,880 --> 00:14:47,910
will become the
indexes for that see now 10

726
00:14:47,910 --> 00:14:47,920
indexes for that see now 10

727
00:14:47,920 --> 00:14:50,710
indexes for that see now 10
after that i'm just writing 40 see our

728
00:14:50,710 --> 00:14:50,720
after that i'm just writing 40 see our

729
00:14:50,720 --> 00:14:51,189
after that i'm just writing 40 see our
10

730
00:14:51,189 --> 00:14:51,199
10

731
00:14:51,199 --> 00:14:53,509
10
after that i'm writing 40 after that i'm

732
00:14:53,509 --> 00:14:53,519
after that i'm writing 40 after that i'm

733
00:14:53,519 --> 00:14:54,310
after that i'm writing 40 after that i'm
writing

734
00:14:54,310 --> 00:14:54,320
writing

735
00:14:54,320 --> 00:14:57,350
writing
70 because this is a column major

736
00:14:57,350 --> 00:14:57,360
70 because this is a column major

737
00:14:57,360 --> 00:15:00,629
70 because this is a column major
not row major fine so the next is

738
00:15:00,629 --> 00:15:00,639
not row major fine so the next is

739
00:15:00,639 --> 00:15:02,550
not row major fine so the next is
what do you mean by the rev measure room

740
00:15:02,550 --> 00:15:02,560
what do you mean by the rev measure room

741
00:15:02,560 --> 00:15:03,990
what do you mean by the rev measure room
with the students it means

742
00:15:03,990 --> 00:15:04,000
with the students it means

743
00:15:04,000 --> 00:15:06,389
with the students it means
no matter here the elements are stored

744
00:15:06,389 --> 00:15:06,399
no matter here the elements are stored

745
00:15:06,399 --> 00:15:07,110
no matter here the elements are stored
according to

746
00:15:07,110 --> 00:15:07,120
according to

747
00:15:07,120 --> 00:15:09,590
according to
robots in column meter the elements are

748
00:15:09,590 --> 00:15:09,600
robots in column meter the elements are

749
00:15:09,600 --> 00:15:10,230
robots in column meter the elements are
stored

750
00:15:10,230 --> 00:15:10,240
stored

751
00:15:10,240 --> 00:15:13,750
stored
according to the column twice so

752
00:15:13,750 --> 00:15:13,760
according to the column twice so

753
00:15:13,760 --> 00:15:16,949
according to the column twice so
students in this lecture we

754
00:15:16,949 --> 00:15:16,959
students in this lecture we

755
00:15:16,959 --> 00:15:19,430
students in this lecture we
learn about the array introduction of

756
00:15:19,430 --> 00:15:19,440
learn about the array introduction of

757
00:15:19,440 --> 00:15:20,230
learn about the array introduction of
the array

758
00:15:20,230 --> 00:15:20,240
the array

759
00:15:20,240 --> 00:15:22,710
the array
then how can we represent the elements

760
00:15:22,710 --> 00:15:22,720
then how can we represent the elements

761
00:15:22,720 --> 00:15:23,829
then how can we represent the elements
in 1d array

762
00:15:23,829 --> 00:15:23,839
in 1d array

763
00:15:23,839 --> 00:15:27,189
in 1d array
and 2dm we have also seen the examples

764
00:15:27,189 --> 00:15:27,199
and 2dm we have also seen the examples

765
00:15:27,199 --> 00:15:30,870
and 2dm we have also seen the examples
of only array that how can we calculate

766
00:15:30,870 --> 00:15:30,880
of only array that how can we calculate

767
00:15:30,880 --> 00:15:31,990
of only array that how can we calculate
the memory address

768
00:15:31,990 --> 00:15:32,000
the memory address

769
00:15:32,000 --> 00:15:35,030
the memory address
in 1d so if you have

770
00:15:35,030 --> 00:15:35,040
in 1d so if you have

771
00:15:35,040 --> 00:15:37,749
in 1d so if you have
any doubt in this lecture then please

772
00:15:37,749 --> 00:15:37,759
any doubt in this lecture then please

773
00:15:37,759 --> 00:15:39,509
any doubt in this lecture then please
feel free to ask me

774
00:15:39,509 --> 00:15:39,519
feel free to ask me

775
00:15:39,519 --> 00:15:51,279
feel free to ask me
thank you so much

